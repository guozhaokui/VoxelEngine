import { Texture } from "../../../../resource/Texture";
import { Shader } from "../../Shader";
import { Shader2D } from "../Shader2D";
import { ShaderDefines2D } from "../ShaderDefines2D";
export declare class Value2D {
    protected static _cache: any[];
    protected static _typeClass: any;
    static TEMPMAT4_ARRAY: any[];
    static _initone(type: number, classT: any): void;
    static __init__(): void;
    defines: ShaderDefines2D;
    size: any[];
    alpha: number;
    mmat: any[];
    u_MvpMatrix: any[];
    texture: any;
    ALPHA: number;
    shader: Shader;
    mainID: number;
    subID: number;
    filters: any[];
    textureHost: Texture;
    color: any[];
    colorAdd: any[];
    u_mmat2: any[];
    ref: number;
    protected _attribLocation: any[];
    private _inClassCache;
    private _cacheID;
    clipMatDir: any[];
    clipMatPos: any[];
    clipOff: any[];
    constructor(mainID: number, subID: number);
    setValue(value: Shader2D): void;
    private _ShaderWithCompile;
    upload(): void;
    setFilters(value: any[]): void;
    clear(): void;
    release(): void;
    static create(mainType: number, subType: number): Value2D;
}
